fragment Player on ChessPlayer {
  id
  color
  ready
  desiresDraw
}

fragment Game on ChessGame {
  id
  fenString
  players {
    ...Player
  }
  status
  moveHistory
}

query GetGame($id: ID!) {
  gameById(gameId: $id) {
    ...Game
  }
}

mutation CreateGame {
  createGame {
    ...Game
  }
}

mutation JoinGame($id: ID!) {
  joinGame(gameId: $id) {
    ...Game
  }
}

mutation ToggleReady($id: ID!, $ready: Boolean!) {
  toggleReady(gameId: $id, ready: $ready) {
    ...Game
  }
}

mutation ToggleDrawDesire($id: ID!, $ready: Boolean!) {
  toggleDrawDesire(gameId: $id, desireDraw: $ready) {
    ...Game
  }
}

mutation PlayMove($id: ID!, $move: String!) {
  playMove(gameId: $id, move: $move) {
    ...Game
  }
}

mutation LeaveGame($id: ID!) {
  leaveGame(gameId: $id) {
    ...Game
  }
}

mutation Resign($id: ID!) {
  resign(gameId: $id) {
    ...Game
  }
}

subscription ChessGameStateChanged($id: ID!) {
  chessGameStateChanged(gameId: $id) {
    ...Game
  }
}

query CurrentUserId {
  currentUserId
}
